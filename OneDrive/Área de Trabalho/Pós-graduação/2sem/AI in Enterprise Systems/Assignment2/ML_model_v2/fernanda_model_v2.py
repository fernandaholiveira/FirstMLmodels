# -*- coding: utf-8 -*-
"""Fernanda_model_v2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k4170vYU_sNQO-I9masHe-SP6QQSckHU
"""

#importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.metrics import confusion_matrix, classification_report

from google.colab import drive
drive.mount('/content/drive')

#importing our cancer dataset
dataset = pd.read_csv('/content/drive/My Drive/breast-cancer-wisconsin.data')

X = dataset.iloc[:, 1:10].values
Y = dataset.iloc[:, 10].values

#Encoding categorical data values
from sklearn.preprocessing import LabelEncoder
labelencoder_Y = LabelEncoder()
Y = labelencoder_Y.fit_transform(Y)

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.25, random_state = 0)

#Feature Scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()

X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)



"""# SVM"""

#Using SVC method of svm class to use Support Vector Machine Algorithm
from sklearn.svm import SVC
classifier = SVC(kernel = 'linear', random_state = 0)
classifier.fit(X_train, Y_train)

Y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(Y_test, Y_pred)

print(cm)

# Obtain the results from the classification 
print('Classifcation report:\n', classification_report(Y_test, Y_pred))

cm = confusion_matrix(Y_test, Y_pred) 
plt.rcParams['figure.figsize'] = (8, 8)
plt.show()